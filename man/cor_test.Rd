% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cor_test.R
\name{cor_test}
\alias{cor_test}
\title{Test for Multiple Correlations Between Paired Samples}
\usage{
cor_test(x, y = NULL, use = "pairwise", method = "pearson",
  boot_ci = FALSE, p_adjust = "fdr", ...)
}
\arguments{
\item{x}{a numeric matrix or data frame.}

\item{y}{NULL (default) or a matrix or data frame with compatible dimensions
to x. The default is equivalent to y = x (but more efficient).}

\item{use}{an optional character string giving a method for handling missing
values. This must be (an abbreviation of) one of the strings "everything",
"all.obs", "complete.obs", "na.or.complete", or "pairwise.complete.obs"
(default). See \code{\link[stats]{cor}} for explanation of these options.}

\item{method}{a character string indicating which correlation coefficient is
to be computed. One of "pearson" (default), "kendall", or "spearman": can be
abbreviated.}

\item{boot_ci}{Logical value indicating whether or not to generate a
bootstrapped confidence interval for the correlation coefficient. Defaults
to \code{FALSE}.}

\item{p_adjust}{Character string naming the correction method to adjust for
multiple correlation tests. In addition to the standard available
\code{\link[stats]{p.adjust.methods}}, one may also choose \code{"permute"},
in which case \code{\link{cor_perm}} will be used to empirically determine
and adjust for the family-wise error rate. Default method is to control
the false discovery rate (\code{"fdr"}) with the Benjaminiâ€“Hochberg
(\code{"BH"}) procedure.}

\item{...}{Optional named arguments accepted by \code{\link{cor_boot}},
\code{\link{cor_perm}}, and/or \code{\link[stats]{cor.test}}}
}
\value{
a \code{\link{cor_test}} object
}
\description{
Test for multiple associations between paired samples, using one of Pearson's
product moment correlation coefficient, Kendall's tau or Spearman's rho.
}
\examples{
# Create a correlation list for the numeric variables from the iris data set
iris_cors <- cor_test(iris[,-5])
summary(iris_cors)

# Calculate a bootstrap confidence interval
iris_cors <- cor_test(iris[,-5], boot_ci = TRUE, n_rep = 1000)
summary(iris_cors)

# Obtain unadjusted p-values with no correction for false discovery
iris_cors <- cor_test(iris[,-5], p_adjust = "none")
summary(iris_cors)

# Use permutation test to adjust p-value for family-wise error
iris_cors <- cor_test(iris[,-5], p_adjust = "permute", n_perm = 1000)
summary(iris_cors)

# Use Bonferroni correction to adjust p-value for family-wise error
iris_cors <- cor_test(iris[,-5], p_adjust = "bonferroni")
summary(iris_cors)

#' Calculate spearman's rho
iris_cors <- cor_test(iris[,-5], method = "spearman")
summary(iris_cors)

}
\seealso{
\code{\link[stats]{cor.test}}, \code{\link{cor_list}},
\code{\link{summary.cor_list}},  \code{\link{cor_boot}},
\code{\link{cor_perm}}, \code{\link[stats]{p.adjust}}
}
